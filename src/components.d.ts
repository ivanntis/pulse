/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */


import '@stencil/core';


import {
  Color,
  Fill,
} from './interface';


export namespace Components {

  interface PulseButton {
    'color': Color;
    'disabled': boolean;
    'fill': Fill;
    'type': 'submit' | 'reset' | 'button';
  }
  interface PulseButtonAttributes extends StencilHTMLAttributes {
    'color'?: Color;
    'disabled'?: boolean;
    'fill'?: Fill;
    'onPulseBlur'?: (event: CustomEvent<void>) => void;
    'onPulseFocus'?: (event: CustomEvent<void>) => void;
    'type'?: 'submit' | 'reset' | 'button';
  }

  interface PulseFlowtt {}
  interface PulseFlowttAttributes extends StencilHTMLAttributes {}
}

declare global {
  interface StencilElementInterfaces {
    'PulseButton': Components.PulseButton;
    'PulseFlowtt': Components.PulseFlowtt;
  }

  interface StencilIntrinsicElements {
    'pulse-button': Components.PulseButtonAttributes;
    'pulse-flowtt': Components.PulseFlowttAttributes;
  }


  interface HTMLPulseButtonElement extends Components.PulseButton, HTMLStencilElement {}
  var HTMLPulseButtonElement: {
    prototype: HTMLPulseButtonElement;
    new (): HTMLPulseButtonElement;
  };

  interface HTMLPulseFlowttElement extends Components.PulseFlowtt, HTMLStencilElement {}
  var HTMLPulseFlowttElement: {
    prototype: HTMLPulseFlowttElement;
    new (): HTMLPulseFlowttElement;
  };

  interface HTMLElementTagNameMap {
    'pulse-button': HTMLPulseButtonElement
    'pulse-flowtt': HTMLPulseFlowttElement
  }

  interface ElementTagNameMap {
    'pulse-button': HTMLPulseButtonElement;
    'pulse-flowtt': HTMLPulseFlowttElement;
  }


  export namespace JSX {
    export interface Element {}
    export interface IntrinsicElements extends StencilIntrinsicElements {
      [tagName: string]: any;
    }
  }
  export interface HTMLAttributes extends StencilHTMLAttributes {}

}
